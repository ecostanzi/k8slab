kind: ConfigMap
apiVersion: v1
metadata:
  name: application
data:
  application.yml: |-
    spring:
     cloud:
      kubernetes:
        discovery:
          all-namespaces: false
          service-labels:
            spring-boot: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminserver
  labels:
    app: adminserver
spec:
  replicas: 0
  selector:
    matchLabels:
      app: adminserver
  template:
    metadata:
      labels:
        app: adminserver
    spec:
      serviceAccountName: spring-boot-admin-sa
      containers:
        - name: adminserver
          image: docker.io/enricocostanzi/adminserverservice:1.2.2
          ports:
            - containerPort: 8080
#          resources:
#            requests:
#              memory: "100Mi"
#              cpu: "200m"
#            limits:
#              memory: "1500Mi"
#              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /actuator/health #/readiness
              port: 8080
            initialDelaySeconds: 6
            periodSeconds: 5
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /actuator/health #/liveness
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 5
---
apiVersion: v1
kind: Service
metadata:
  name: admin-server
  labels:
    app: adminserver
spec:
  selector:
    app: adminserver
  type: NodePort
  ports:
    - name: http
      port: 80
      targetPort: 8080
---
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  labels:
#    app: adminserver
#  name: adminserveringress
#spec:
#  rules:
#    - host: admin-server.demo.intesys.net
#      http:
#        paths:
#          - backend:
#              serviceName: admin-server
#              servicePort: 80
#---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: adminserver-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: adminserver
  minReplicas: 1
  maxReplicas: 2
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: spring-boot-admin-sa
  labels:
    app: spring-boot-admin
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: spring-boot-admin-role
  labels:
    app: spring-boot-admin
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - endpoints
  - services
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: spring-boot-admin-role-binding
  labels:
    app: spring-boot-admin
subjects:
  - kind: ServiceAccount
    name: spring-boot-admin-sa
roleRef:
    kind: Role
    name: spring-boot-admin-role
    apiGroup: rbac.authorization.k8s.io

